<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="msMedici.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="homeToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UCDN8tXRU6cAAAAASUVORK5CYII=
</value>
  </data>
</root>